// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again:
// With a Flutter package, run `flutter pub run build_runner build`.
// With a Dart package, run `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart';
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'entities/person.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <ModelEntity>[
  ModelEntity(
      id: const IdUid(1, 1952141265370471068),
      name: 'Person',
      lastPropertyId: const IdUid(4, 7946664888017325959),
      flags: 0,
      properties: <ModelProperty>[
        ModelProperty(
            id: const IdUid(1, 919636229093153005),
            name: 'personId',
            type: 6,
            flags: 1),
        ModelProperty(
            id: const IdUid(2, 1997459929099055638),
            name: 'nationalIdNumber',
            type: 9,
            flags: 2080,
            indexId: const IdUid(1, 1654674799564031124)),
        ModelProperty(
            id: const IdUid(3, 4119143162239936452),
            name: 'name',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(4, 7946664888017325959),
            name: 'age',
            type: 6,
            flags: 0)
      ],
      relations: <ModelRelation>[],
      backlinks: <ModelBacklink>[])
];

/// Open an ObjectBox store with the model declared in this file.
Future<Store> openStore(
        {String? directory,
        int? maxDBSizeInKB,
        int? fileMode,
        int? maxReaders,
        bool queriesCaseSensitiveDefault = true,
        String? macosApplicationGroup}) async =>
    Store(getObjectBoxModel(),
        directory: directory ?? (await defaultStoreDirectory()).path,
        maxDBSizeInKB: maxDBSizeInKB,
        fileMode: fileMode,
        maxReaders: maxReaders,
        queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
        macosApplicationGroup: macosApplicationGroup);

/// ObjectBox model definition, pass it to [Store] - Store(getObjectBoxModel())
ModelDefinition getObjectBoxModel() {
  final model = ModelInfo(
      entities: _entities,
      lastEntityId: const IdUid(1, 1952141265370471068),
      lastIndexId: const IdUid(1, 1654674799564031124),
      lastRelationId: const IdUid(0, 0),
      lastSequenceId: const IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, EntityDefinition>{
    Person: EntityDefinition<Person>(
        model: _entities[0],
        toOneRelations: (Person object) => [],
        toManyRelations: (Person object) => {},
        getId: (Person object) => object.personId,
        setId: (Person object, int id) {
          object.personId = id;
        },
        objectToFB: (Person object, fb.Builder fbb) {
          final nationalIdNumberOffset = object.nationalIdNumber == null
              ? null
              : fbb.writeString(object.nationalIdNumber!);
          final nameOffset =
              object.name == null ? null : fbb.writeString(object.name!);
          fbb.startTable(5);
          fbb.addInt64(0, object.personId ?? 0);
          fbb.addOffset(1, nationalIdNumberOffset);
          fbb.addOffset(2, nameOffset);
          fbb.addInt64(3, object.age);
          fbb.finish(fbb.endTable());
          return object.personId ?? 0;
        },
        objectFromFB: (Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);

          final object = Person(
              personId: const fb.Int64Reader()
                  .vTableGetNullable(buffer, rootOffset, 4),
              nationalIdNumber: const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 6),
              name: const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 8),
              age: const fb.Int64Reader()
                  .vTableGetNullable(buffer, rootOffset, 10));

          return object;
        })
  };

  return ModelDefinition(model, bindings);
}

/// [Person] entity fields to define ObjectBox queries.
class Person_ {
  /// see [Person.personId]
  static final personId =
      QueryIntegerProperty<Person>(_entities[0].properties[0]);

  /// see [Person.nationalIdNumber]
  static final nationalIdNumber =
      QueryStringProperty<Person>(_entities[0].properties[1]);

  /// see [Person.name]
  static final name = QueryStringProperty<Person>(_entities[0].properties[2]);

  /// see [Person.age]
  static final age = QueryIntegerProperty<Person>(_entities[0].properties[3]);
}
